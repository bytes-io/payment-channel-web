<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Payment Channel</title>

    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">


    <style>
      body {
        padding-left: 50px;
        padding-right: 50px;
      }
    </style>

  </head>

  <body>
    <div class="container-fluid">

      <div class="row">
        <h1 class="page-header">Payment Channel Demo</h1>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.34/dist/web3.min.js"></script>

    <script>
      const PaymentChannelArtifact = <%- JSON.stringify(paymentChannelArtifact) %>;
      let paymentChannel;
      let sender;
      let recipient;

      function start() {
        paymentChannel = new web3.eth.Contract(PaymentChannelArtifact.abi);
        paymentChannel.setProvider(web3.currentProvider);
        web3.eth.getAccounts()
          .then(accs => {
            sender = accs[0];
            recipient = accs[1];

            return this.deployContract()
          })
          .then(newInstance => {
            paymentChannel = newInstance;

            return paymentChannel.methods.close()
              .send({from: sender})
          })
          .then(() => {
            console.log("Channel closed")
          });
      }

      function deployContract() {
        const now = new Date();
        const twoHoursLater = new Date(now.getTime() + (2 * 1000 * 60 * 60)).getTime() / 1000;

        return paymentChannel.deploy({
          data: PaymentChannelArtifact.bytecode,
          arguments: [recipient, twoHoursLater]
        })
        .send({ from: sender, gas: 1500000 })
      }

      window.addEventListener('load', () => {
        if (typeof web3 !== 'undefined') {
          web3 = new Web3(web3.currentProvider);
        } else {
          web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:7545'));
        }

        start();
      });
    </script>
  </body>
</html>
